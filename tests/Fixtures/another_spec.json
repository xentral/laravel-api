{
  "openapi": "3.1.0",
  "info": {
    "title": "anotherAPI",
    "description": "another API",
    "contact": {
      "name": "API Support",
      "url": "https://.dddd.com",
      "email": "dwwwwd@example.com"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://.another.com",
      "description": "Your API environment"
    }
  ],
  "paths": {
    "/api/v1/another-models": {
      "get": {
        "description": "List another resources",
        "operationId": "GET::api-v1-another-models",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "The filter parameter is used to filter the results of the given endpoint. \n\n\n**Supported filter operators by key:** \n\n`id`: *equals*, *notEquals*, *in*, *notIn* \n\n`name`: *equals*, *notEquals*, *in*, *notIn*, *contains*, *notContains*, *startsWith*, *endsWith* \n\n`status`: *equals*, *notEquals*, *in*, *notIn*, *contains*, *notContains*, *startsWith*, *endsWith* \n\n`created_at`:  \n\n`updated_at`: ",
            "required": false,
            "style": "deepObject",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "key": {
                    "type": "string",
                    "enum": [
                      "id",
                      "name",
                      "status",
                      "created_at",
                      "updated_at"
                    ]
                  },
                  "op": {
                    "description": "operator",
                    "type": "string",
                    "enum": [
                      "equals",
                      "notEquals",
                      "in",
                      "notIn",
                      "contains",
                      "notContains",
                      "startsWith",
                      "endsWith"
                    ]
                  },
                  "value": {
                    "description": "value oder so",
                    "oneOf": [
                      {
                        "title": "String",
                        "type": "string"
                      },
                      {
                        "title": "Array",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "another model"
                ]
              }
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page. Default: 15, Max: 1337",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 15
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List another resources",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnotherResource"
                      }
                    },
                    "meta": {
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "integer"
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "total": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "update another resource",
        "operationId": "POST::api-v1-another-models",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanothermodelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update another resource",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnotherResource"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The name is invalid."
                    },
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "The name is invalid."
                        ],
                        "status": [
                          "The status is invalid."
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/another-models/{id}": {
      "get": {
        "description": "get another resource",
        "operationId": "GET::api-v1-another-models-id",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "required": false,
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "another resource"
                ]
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get another resource",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnotherResource"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "description": "delete another resource",
        "operationId": "DELETE::api-v1-another-models-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "description": "update another resource",
        "operationId": "PATCH::api-v1-another-models-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanothermodelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update another resource",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AnotherResource"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The property is required."
                    },
                    "errors": {
                      "type": "object",
                      "example": {
                        "property": [
                          "The property is required."
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateanothermodelRequest": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "pending"
            ]
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "AnotherResource": {
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "pending"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "UpdateanothermodelRequest": {
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "active",
              "inactive",
              "pending"
            ]
          }
        },
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}