{
    "openapi": "3.1.0",
    "info": {
        "title": "My API",
        "description": "Developer API",
        "contact": {
            "name": "API Support",
            "url": "https://.example.com",
            "email": "api@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://.example.com",
            "description": "Your API environment"
        }
    ],
    "paths": {
        "/api/v1/test-models": {
            "get": {
                "description": "This endpoint is only available if the feature flag `beta-users` is enabled.\n\nThis endpoint requires the following scopes: `test-models:read`.\n\nList test resources",
                "operationId": "GET::api-v1-test-models",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The filter parameter is used to filter the results of the given endpoint. \n\n\n**Supported filter operators by key:** \n\n`id`: *equals*, *notEquals*, *in*, *notIn* \n\n`name`: *equals*, *notEquals*, *in*, *notIn*, *contains*, *notContains*, *startsWith*, *endsWith* \n\n`status`: *equals*, *notEquals*, *in*, *notIn*, *contains*, *notContains*, *startsWith*, *endsWith* \n\n`created_at`:  \n\n`updated_at`: ",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "enum": [
                                            "id",
                                            "name",
                                            "status",
                                            "created_at",
                                            "updated_at"
                                        ],
                                        "type": "string"
                                    },
                                    "op": {
                                        "enum": [
                                            "equals",
                                            "notEquals",
                                            "in",
                                            "notIn",
                                            "contains",
                                            "notContains",
                                            "startsWith",
                                            "endsWith"
                                        ],
                                        "type": "string",
                                        "description": "operator"
                                    },
                                    "value": {
                                        "oneOf": [
                                            {
                                                "title": "String",
                                                "type": "string"
                                            },
                                            {
                                                "title": "Array",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        ],
                                        "description": "value oder so"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "test model"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page. Default: 15, Max: 1337",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List test resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "created_at",
                                                    "updated_at"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "active",
                                                            "inactive",
                                                            "pending"
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "x-feature_flag": "beta-users",
                "x-scopes": [
                    "test-models:read"
                ]
            },
            "post": {
                "description": "update test resource",
                "operationId": "POST::api-v1-test-models",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "pending"
                                        ]
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update test resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "active",
                                                        "inactive",
                                                        "pending"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failed validation",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name is invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name is invalid."
                                                ],
                                                "status": [
                                                    "The status is invalid."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/test-models/{id}": {
            "delete": {
                "description": "delete test resource",
                "operationId": "DELETE::api-v1-test-models-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "get": {
                "description": "get test resource",
                "operationId": "GET::api-v1-test-models-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "test resource"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get test resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "active",
                                                        "inactive",
                                                        "pending"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "description": "update test resource",
                "operationId": "PATCH::api-v1-test-models-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "status": {
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "pending"
                                        ],
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update test resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "active",
                                                        "inactive",
                                                        "pending"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failed validation",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The property is required."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "property": [
                                                    "The property is required."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/test-models/{id}/actions/test": {
            "patch": {
                "description": "Execute test action on test resource",
                "operationId": "PATCH::api-v1-test-models-id-actions-test",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/another-models": {
            "get": {
                "description": "List another resources",
                "operationId": "GET::api-v1-another-models",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The filter parameter is used to filter the results of the given endpoint. \n\n\n**Supported filter operators by key:** \n\n`id`: *equals*, *notEquals*, *in*, *notIn* \n\n`name`: *equals*, *notEquals*, *in*, *notIn*, *contains*, *notContains*, *startsWith*, *endsWith* \n\n`status`: *equals*, *notEquals*, *in*, *notIn*, *contains*, *notContains*, *startsWith*, *endsWith* \n\n`created_at`:  \n\n`updated_at`: ",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "enum": [
                                            "id",
                                            "name",
                                            "status",
                                            "created_at",
                                            "updated_at"
                                        ],
                                        "type": "string"
                                    },
                                    "op": {
                                        "enum": [
                                            "equals",
                                            "notEquals",
                                            "in",
                                            "notIn",
                                            "contains",
                                            "notContains",
                                            "startsWith",
                                            "endsWith"
                                        ],
                                        "type": "string",
                                        "description": "operator"
                                    },
                                    "value": {
                                        "oneOf": [
                                            {
                                                "title": "String",
                                                "type": "string"
                                            },
                                            {
                                                "title": "Array",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        ],
                                        "description": "value oder so"
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "another model"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page. Default: 15, Max: 1337",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List another resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "created_at",
                                                    "updated_at"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "active",
                                                            "inactive",
                                                            "pending"
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "description": "update another resource",
                "operationId": "POST::api-v1-another-models",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "pending"
                                        ]
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update another resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "active",
                                                        "inactive",
                                                        "pending"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Failed validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name is invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name is invalid."
                                                ],
                                                "status": [
                                                    "The status is invalid."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/another-models/{id}": {
            "delete": {
                "description": "delete another resource",
                "operationId": "DELETE::api-v1-another-models-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "get": {
                "description": "get another resource",
                "operationId": "GET::api-v1-another-models-id",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "another resource"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get another resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "active",
                                                        "inactive",
                                                        "pending"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "description": "update another resource",
                "operationId": "PATCH::api-v1-another-models-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "status": {
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "pending"
                                        ],
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update another resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "required": [
                                                "id",
                                                "name",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "active",
                                                        "inactive",
                                                        "pending"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Failed validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The property is required."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "property": [
                                                    "The property is required."
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {},
        "securitySchemes": {
            "BearerAuth": {
                "scheme": "bearer",
                "type": "http"
            }
        },
        "responses": {},
        "requestBodies": {}
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}